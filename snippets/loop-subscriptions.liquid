{% if type contains 'product-widget' %}
	{% if product.selling_plan_groups.size > 0 %}
		{% assign current_variant = product.selected_or_first_available_variant %}
		<input type="hidden" name="variant-id" value="{{current_variant.id}}">
		<input type="hidden" name="product-id" value="{{product.id}}">
		<input type="hidden" name="selling_plan" id="selling-plan">
		<fieldset
          id="loop-widget-fieldset"
          data-current-variant-id="{{current_variant.id}}"
          data-current-selling-plan-id="{{product.selected_selling_plan.id}}"
          data-current-selling-plan-name="{{product.selected_selling_plan.name}}"
          style="margin-bottom:20px; flex-basis:100%"
        >
          <legend>Purchase Options</legend>

          {% unless product.requires_selling_plan %}
          	<div class="spg-grid" name="spg-one-time-purchase">
              <input type="radio" name="loop_purchase_option" autocomplete="off" id="loop-one-time-purchase"
				{% unless product.selected_selling_plan %}checked{% endunless %}
				>
              <label for="loop-one-time-purchase">One time Purchase</label>
              {% for variant in product.variants %}
                <div class="spg-price" name="variant-price" data-spg-variant-ids="{{variant.id}}">
                  {{-variant.price | money -}}
                  <span> each</span>
              	</div>
              {% endfor %}

          	</div>
          {% endunless %}
          {% if product.requires_selling_plan %}
          {% endif %}
          {% comment %} this will be taken from URL {% endcomment %}
          {% assign selected_selling_plan = product.selected_selling_plan %}
          {% for spg in product.selling_plan_groups %}
<!--           <h2>{{spg.name }}</h2> -->
          	<input type="hidden" name="spg" id="spg-{{spg.id}}" value="{{spg | json}}">
          	<div class="spg-grid"
                 data-spg-variant-ids="{%- for variant in product.variants -%}
                 {%- assign isVariantPresent = false -%}
				 {%- for v-plan in variant.selling_plan_allocations -%}
					{%- if v-plan.selling_plan_group_id == spg.id -%}
						{%- assign isVariantPresent = true -%}
						{%- break -%}
					{%- endif -%}
				 {%- endfor -%}
                 {%- if isVariantPresent -%}{{variant.id}},{%- endif -%}
                 {%- endfor -%}"
                 >
              <input type="radio" class="spg-radio-input" autocomplete="off" name="loop_purchase_option" id="loop-spg-{{spg.id}}-{{spg.selling_plans[0].id}}-{{spg.selling_plans[0].name}}"

                     {% comment %}{% if spg.selling_plan_selected %}checked{% endif %}{% endcomment %}
				>
              <label for="loop-spg-{{spg.id}}-{{spg.selling_plans[0].id}}-{{spg.selling_plans[0].name}}">{{spg.name}}</label>
              {% for variant in product.variants %}
              	{% for v_sp in variant.selling_plan_allocations %}
              		{% if v_sp.selling_plan_group_id != spg.id %}
                    	{% continue %}
              		{% endif %}
              		<div
                      class="spg-price" data-spg-variant-ids="{{variant.id}}"
                      data-selling-plan-id="{{ v_sp.selling_plan.id }}"
                    >
                    	{{- v_sp.per_delivery_price | money -}}
                    	<span > each</span>
             		</div>
              	{% endfor %}
              {% endfor %}
              <div class="spg-select-options">
              <label for="spg-select-{{spg.id}}">{{spg.options[0].name}}</label>
              <select id="spg-select-{{spg.id}}">
                {% for s_plan in spg.selling_plans %}

                	<option data-selling-plan-name="{{s_plan.name}}" value="{{s_plan.id}}">{{s_plan.description}}</option>
                {% endfor %}
              </select>
              </div>
          	</div>
          {% endfor %}
		</fieldset>
	{% endif %}
  <script type="text/javascript">
  const elem = [];
  function updateWidgetCurrentVariant(id) {
    var _widget = document.getElementById("loop-widget-fieldset");
    _widget.dataset.currentVariantId = id;
//     _widget.style.display = 'block';
  }

  function updateWidgetCurrentSellingPlan(id, name) {
    var _widget = document.getElementById("loop-widget-fieldset");
    _widget.dataset.currentSellingPlanId = id;
    _widget.dataset.currentSellingPlanName = name;
//     _widget.style.display = 'block';
  }

  function addSubscriptionToCartFunctionality(type, el) {
    var add_to_cart_btn = document.querySelector("button[type='submit'][name='add']");
    if(type==="S") {
      const el_id = el.target.id;
      let sp_id = el_id.split("-")[3];
      let spg_id = el_id.split("-")[2];
      let sp_name = el_id.substring(el.target.id.indexOf(sp_id)+sp_id.length+1).split('_')[0];
      document.getElementById("spg-select-"+ spg_id).value = sp_id;
      document.getElementById('selling-plan').value = sp_id;
      var _widget = document.getElementById("loop-widget-fieldset");
      var vari_id = _widget.dataset.currentVariantId || _url.searchParams.get('variant');
      _widget.dataset.currentSellingPlanId = sp_id;
      _widget.dataset.currentSellingPlanName = sp_name;
      add_to_cart_btn.textContent = "Add subscription to cart";
  	}
    else {
      console.log("i am here");
      const el_id = el.target.id;
      document.getElementById('selling-plan').value = '';
      add_to_cart_btn.textContent = "Add to cart";
    }
  }

  var firstTimeUrl = document.URL;

  (function checkIfSubs(){

    var url = new URL(firstTimeUrl);
    var isSpUrl = url.searchParams.get("selling_plan");

    var el = document.querySelector("input[id=loop-one-time-purchase]");
    el && (el.checked = true);

  })();


 document.addEventListener('change', function() {
    var currentPageUrl = document.URL;
    var url = new URL(currentPageUrl);
    var isVariantUrl = url.searchParams.get("variant");
    currentPageUrl = isVariantUrl ? currentPageUrl : isVariantUrl;
    if(currentPageUrl && firstTimeUrl != currentPageUrl) {
      firstTimeUrl = currentPageUrl;
      updateWidgetCurrentVariant(isVariantUrl);
    }
  });

  window.onload = () => {
    var spg = Array.from(document.querySelectorAll("input[name=loop_purchase_option]"));
    spg.forEach(inp => inp.addEventListener(
      'click', (el) => {
        console.log(el.target.id);
	  if(el.target.id.match(/^loop-one-time-purchase.*$/))
      {

        addSubscriptionToCartFunctionality("N", el); //N for normal

      }
        else {
        addSubscriptionToCartFunctionality("S", el); //S for subscription
      }
    }));


    //handle <select> change in selling plan
    var sp_selects = Array.from(document.querySelectorAll("[id*=spg-select]"));
    sp_selects.forEach(el => el.addEventListener(
      'change', (e) => {
        sp_id = e.target.value;
        var _url = new URL(window.location);
        //_url.searchParams.set('selling_plan', sp_id);
        var _widget = document.getElementById("loop-widget-fieldset");
        var vari_id = _widget.dataset.currentVariantId || _url.searchParams.get('variant');
        window.history.pushState({}, '', _url);
        var sp_name = e.target.options[e.target.selectedIndex].dataset.sellingPlanName;
        updateWidgetCurrentSellingPlan(sp_id, sp_name);
        document.getElementById("selling-plan").value = sp_id;
      }
    ));
  }

  //whenever radio input of one time purchase is selected remove selling_plan query parameter from URL
  var r_ip_otp = document.getElementById("loop-one-time-purchase");
  r_ip_otp.onclick = function() {
    var params = new  URLSearchParams(window.location.search);
    params.delete("selling_plan");
    var _widget = document.getElementById("loop-widget-fieldset");
    _widget.dataset.currentSellingPlanId = "";
    _widget.dataset.currentSellingPlanName = "";
    window.history.replaceState({}, '', `${window.location.pathname}?${params}`);

  }

  function toggle() {
    var g = document.getElementById('toggleDemo');
    g.dataset.sId=((parseInt(g.dataset.sId)+1)%3).toString();
  }
</script>
<style id="loop-widget-styles">
  .spg-grid {
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    grid-gap: 10px;
    grid-template-areas: "radio-ip label price";
  }

  .spg-grid .plan-option {
    background-color: yellow;
  }
  {% for variant in product.variants %}
  	[data-spg-variant-ids*="{{ variant.id }}"] {
      display: none;
    }

    {% if variant.selling_plan_allocations.size == 0 %}
      [data-current-variant-id="{{ variant.id }}"] {
        display: none;
      }
    {% else %}
    [data-current-variant-id="{{ variant.id }}"] {
        display: block;
      }
    {% endif %}

    [data-current-variant-id="{{variant.id}}"] .spg-grid[data-spg-variant-ids*="{{variant.id}}"] {
      display: grid;
    }

  	[data-current-variant-id="{{variant.id}}"] .spg-price[data-spg-variant-ids="{{variant.id}}"] {
  		display: block;
  	}
  {% endfor %}

  {% for spg in product.selling_plan_groups %}
    {% for sp in spg.selling_plans %}
      [data-selling-plan-id="{{ sp.id }}"] {
      	visibility: hidden;
      }
      [data-current-selling-plan-id="{{ sp.id }}"] .spg-price[data-selling-plan-id="{{ sp.id }}"] {
      	visibility: visible;
      }
    {% endfor %}
  {% endfor %}
  .spg-price {
    display: none;
    grid-area: price;
  }

  .spg-radio-input:not(:checked) ~ .spg-select-options {
    display: none;
  }

  .spg-select-options {
    grid-column: 1 / -1;
    display: grid;
  }

</style>

{%- elsif type == 'customer-portal-link' -%}
  <a href="/a/loop_subscriptions/customer?customer_id={{customer.id}}&sdomain={{shop.domain}}&sname={{shop.name}}" id="loop-subscriptions-customer-portal-link">
    <button class="btn" style="padding: 2px 20px">My Subscription</button>
  </a>
{%- endif -%}
